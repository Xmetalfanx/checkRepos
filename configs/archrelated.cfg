
function checkAUR() {
    # AUR
    # idea: aur should be exact package match 
    packageURL="https://aur.archlinux.org/packages/${package}"
    aur_check=$(curl -Ls "${packageURL}" )
    
    [[ ${aur_check} = *"404 - Page Not Found"* ]] && echo -e "Package ${package} not found in AUR" && userPrompt && return || aur_version=$(curl -Ls "${packageURL}" | awk '/Package Details/ { print $4}' | cut -d "<" -f1 ) && echo -e "${package} version in the AUR is ${aur_version}" 

    clear_vars && userPrompt

}

# check Repos for package
function checkArchRepo() {
    distro="arch"
    echo -e "Checking ${distro} for ${package}"

    # pacman
    #packageURL="https://www.archlinux.org/packages/${package}"
    packageURL="https://archlinux.org/packages/?q=${package}"
    checkRepo=$(curl -sL "${packageURL}" | grep "No matching packages found" )
    
    #only checks to see if its found 
    checkForMatch

    case $package_exists in 
        false) echo "Package ${package} doesn't exist in the default Arch repos" ;;

        true) 
            package_version=$(curl -Ls ${packageURL} | grep -m1 -E "<td>[0-9]*\." | sed 's/<td>//;s/<.td>//' | tr -d \[:blank:] )
            echo -e "Arch version for ${package} is: ${package_version}" 
            ;;

    esac 

    userPrompt

}

function metaCheckArch() {
    checkArchRepo

    checkAUR
}
